buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

plugins {
    id "org.flywaydb.flyway" version "4.0.1"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'demo-secure-method'
    version = '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile(
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.boot:spring-boot-starter-aop",
            "org.springframework:spring-jdbc",
            "org.apache.commons:commons-lang3:3.5",
            "mysql:mysql-connector-java:5.1.38"
    )
    testCompile(
            "junit:junit",
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.security:spring-security-test",
            "org.apache.httpcomponents:httpclient",
            "com.fasterxml.jackson.core:jackson-databind:2.8.7"
    )

}

def loadProperties(){
    def props = new Properties()
    def configPath = "${rootProject.projectDir}/src/main/resources/application.properties"
    new File(configPath).withInputStream{stream -> props.load(stream)}
    props
}

flyway {
    user = loadProperties()['spring.datasource.username']
    password = loadProperties()['spring.datasource.password']
    url = loadProperties()['spring.datasource.url']
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}



